version: "3"

networks:
  swarm-network:
    driver: overlay

services:
  helloworld:
    image: nginxdemos/hello
    networks:
      - swarm-network
    ports:
      - "8080:80"
    deploy:
      placement:
        constraints:
          - node.labels.type == gateway
  postgres:
    image: {{ postgres_image }}
    restart: always
    ports:
      - 5432:5432
    networks:
      - swarm-network
    environment:
      POSTGRES_PASSWORD: {{ postgres_password }}
      POSTGRES_USER: {{ postgres_user }}
    volumes:
      - {{ swarm_deployments_data_path }}/postgres:/var/lib/postgresql/data
      - {{ swarm_deployments_data_path }}/scripts/init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      placement:
        constraints:
          - node.labels.type == data
  kong:
    image: {{ kong_image }}
    depends_on:
      - postgres
    ports:
      - 8000:8000
      - 8001:8001
    networks:
      - swarm-network
    restart: always
    environment:
      KONG_PG_PASSWORD: {{ postgres_kong_password }}
      KONG_DATABASE: {{ kong_database }}
      KONG_PG_HOST: postgres
    command: bash -c "kong migrations up -v && kong start"
    deploy:
      placement:
        constraints:
          - node.labels.type == gateway
  kong-api-gateway:
    image: registry.gitlab.com/interscity/interscity-platform/interscity-platform/kong-api-gateway:latest
    depends_on:
      - kong
    ports:
      - 8888:80
    networks:
      - swarm-network
    restart: always
  rabbitmq:
    image: {{ rabbitmq_image }}
    ports:
      - 5672:5672
    networks:
      - swarm-network
    restart: always
  redis:
    image: {{ redis_image }}
    ports:
      - 6379
    networks:
      - swarm-network
    restart: always
  resourcecataloguer:
    image: "{{ resource_cataloguer_docker_image }}"
    restart: yes
    ports:
      - "{{ resource_cataloguer_port }}:{{ resource_cataloguer_port }}"
    command: /bin/sh -c "bundle exec rake db:create && bundle exec rake db:migrate && bundle exec puma -p {{ resource_cataloguer_port }} -C config/puma.rb -e production"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - kong
    environment:
      RAILS_ENV: "{{ rails_env }}"
      RAILS_MAX_THREADS: 200
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
      POSTGRES_USER: "{{ postgres_rescat_user }}"
      POSTGRES_PASSWORD: "{{ postgres_rescat_password }}"
      SECRET_KEY_BASE: "{{ secret_key_base }}"
      RABBITMQ_HOST: "rabbitmq"
      REGISTER_METHOD: "target"
      KONG_URI: "http://{{ kong }}:{{ kong_admin_port }}"
      SELF_HOST: "resourcecataloguer:{{ resource_cataloguer_port }}"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
    networks:
      - swarm-network
    restart: always
