require 'rails_helper'

describe Detail, :type => :model do

  pending "add some examples to (or delete) #{__FILE__}"
  pending "can be described as a JSON object"  # Test in controller later

  let(:detail) { create(:detail) }

  it "has a valid factory" do
    expect(detail).to be_valid
  end

  it "is generated by a component" do
    # It should already be registered by the Resource Adaptor, hence the "not nil"
    expect(detail.component_uuid).should_not be_nil
    expect(detail.capability).should_not eq('')
    #FIXME FactoryGirl.build(:detail, :component_uuid => "").should_not be_valid
  end

  it "has a capability" do
    expect(detail.capability).should_not be_nil
    expect(detail.capability).should_not eq('')
    #FactoryGirl.build(:detail, :capability => "").should_not be_valid
  end

  it "has a data type" do
    expect(detail.data_type).should_not be_nil
    expect(detail.data_type).should_not eq('')
    #FIXME FactoryGirl.build(:detail, :data_type => "").should_not be_valid
  end

  it "has a unit of measurement" do
    expect(detail.unit).should_not be_nil
    expect(detail.unit).should_not eq('')
    #FactoryGirl.build(:detail, :unit => "").should_not be_valid
  end

  it "has a value" do
    expect(detail.value).should_not be_nil
    expect(detail.value).should_not eq('')
    #FIXME FactoryGirl.build(:detail, :value => "").should_not be_valid
  end

  it "belongs to an event" do
    #FIXME expect(detail).to belong_to detail.event
  end

end
